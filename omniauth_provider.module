<?php

/**
 * @file
 *
 * @author
 * Stefan Auditor <stefan.auditor@erdfisch.de>
 * Felix Delattre <felix.delattre@erdfisch.de>
 */
include_once('omniauth_provider.features.inc');

/**
 * Implement HOOK_menu_alter().
 */
function omniauth_provider_menu_alter(&$items) {
  // Remove OpenID Provider information from profile page
  $items['user/%user/openid-sites']['access callback'] = 'user_access';
  $items['user/%user/openid-sites']['access arguments'] = array('administer openid provider');

  if (!user_access('administer openid provider')) {
    $items['user/%user/openid-sites']['access callback'] = FALSE;
  }
}

/**
 * Implement HOOK_user().
 */
function omniauth_provider_user($op, &$edit, &$account, $category = NULL) {
  switch ($op) {
    case 'view':
      if (!user_access('administer openid provider')) {
        unset($account->content['openid']);
      }
      break;
    case 'after_update':
     // if a redirect back to a relying party is set, goto it.
     if (isset($_SESSION['omniauth_redirect'])) {
       $omniauth_redirect_path = $_SESSION['omniauth_redirect'];
       unset($_SESSION['omniauth_redirect']);
       drupal_goto($omniauth_redirect_path);
     }
     break;
  }
}

/**
 * Implement HOOK_form_FORM_ID_alter().
 */
function omniauth_provider_form_profile_node_form_alter(&$form, &$form_state) {
  // Hide from normal users
  if (!user_access('administer content')) {
    $form['title']['#type'] = 'value';
    $form['body_field']['#type'] = 'value';
  }
}

/**
 * Implement HOOK_block().
 */
function omniauth_provider_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[0] = array(
      'info' => t('List of relying parties'),
    );
    return $blocks;
  }
  else if ($op == 'configure' && $delta == 0) {
  }
  else if ($op == 'save' && $delta == 0) {
  }
  else if ($op == 'view') {
    switch($delta) {
      case 0:
        $block = array(
          'subject' => t('Relying Parties'),
          'content' => omniauth_provider_block_1()
        );
        break;
    }
    return $block;
  }
}

/**
 * Implements hook_init()
 */
function omniauth_provider_init() {
  // If information about later redirect has been found
  if (isset($_GET['omniauth_redirect'])) {
    // store this information into the $_SESSION array
    $_SESSION['omniauth_redirect'] = $_GET['omniauth_redirect'];
  }
}

/**
 *
 */
function omniauth_provider_block_1() {

  $realms = omniauth_provider_get_user_related_relying_parties();
  if (!empty($realms)) {
    $items = array();
    foreach ($realms as $rp) {
      $items[] = '<strong>'. l(check_plain($rp['name']), check_url($rp['realm'])) .'</strong> '. check_url($rp['realm']);
    }
    return theme('item_list', $items, NULL, 'ol');
  }
}


function omniauth_provider_get_user_related_relying_parties() {
  global $user;
  // get the relying parties the current user has logged into.
  $result = db_query('SELECT * FROM {openid_provider_sso_rps} rps1
    INNER JOIN {openid_provider_relying_party} rps2
    ON rps1.realm = rps2.realm
    WHERE rps2.uid = %d', $user->uid);

  $realms = array();
  while ($rp = db_fetch_array($result)) {
    $realms[$rp['realm']] = $rp;
  }
  return $realms;
}

